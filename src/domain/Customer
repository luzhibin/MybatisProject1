<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.CustomerMapper">
    <!--根据cust_id查询客户-->
    <select id="queryCustomerById" parameterType="Integer" resultType="domain.Customer">
	  SELECT * FROM `customer` WHERE cust_id  = #{cust_id}
	</select>

    <!--查询所有用户-->
    <select id="queryAllCustomer" resultType="domain.Customer">
	  SELECT * FROM `customer`
	</select>

    <!--根据用户名模糊查询用户-->
    <select id="queryCustomerByName" parameterType="String" resultType="domain.Customer">
        select * from `customer` where cust_name like '%${value}%'
    </select>

    <!--插入操作  添加客户-->
    <insert id="insertCustom" parameterType="domain.Customer">
      /*获取插入的最后一个ID*/
      /*keyColumn用于指定数据库table中的主键，keyProperty用于指定传入对象的成员变量,order：AFTER：在sql语句执行完后获取ID*/
        <selectKey keyColumn="cust_id" keyProperty="cust_id" resultType="Integer" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into `customer` (cust_name,cust_profession,cust_phone,email)
        values (#{cust_name},#{cust_profession},#{cust_phone},#{email})
    </insert>

    <!--更新操作-->
    <update id="updateCustomer" parameterType="domain.Customer">
        update `customer` set cust_name=#{cust_name} where cust_id=#{cust_id}
    </update>

    <!--删除操作-->
    <delete id="deleteCustomer" parameterType="domain.Customer">
        delete from `customer` where cust_id=#{cust_id}
    </delete>
</mapper>